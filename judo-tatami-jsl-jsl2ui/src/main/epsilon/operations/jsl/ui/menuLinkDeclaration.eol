@cached
operation JSL!UIMenuLinkDeclaration getId(): String {
    return (self.eContainer.getId() + "/" + self.name);
}

@cached
operation JSL!UIMenuLinkDeclaration getFqName(): String {
    if (self.eContainer.isDefined()) {
        return self.eContainer.getFqName() + "::" + self.name;
    }
    return self.name;
}

@cached
operation JSL!UIMenuLinkDeclaration getExposedVisualElements(): Set {
    var ves = new Set();
    var viewDeclaration = self.referenceType;

    for (link in viewDeclaration.members.select(m | m.isTypeOf(JSL!UIMenuLinkDeclaration)).asSet()) {
        ves.addAll(link.getExposedVisualElements());
    }

    for (table in viewDeclaration.members.select(m | m.isTypeOf(JSL!UIMenuTableDeclaration)).asSet()) {
        ves.addAll(table.getExposedVisualElements());
    }

    ves.addAll(viewDeclaration.members.select(m | m.isTypeOf(JSL!UIViewWidgetDeclaration)).asSet());

    return ves;
}
