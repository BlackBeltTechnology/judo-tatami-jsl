@cached
operation JSL!Modifiable getId(): String {
    return (self.eContainer.getId() + "/" + self.id);
}

@cached
operation JSL!Modifiable getLabelModifier(): JSL!Modifier {
    return self.modifiers.selectOne(m | m.isTypeOf(JSL!LabelModifier));
}

@cached
operation JSL!Modifiable getIconModifier(): JSL!Modifier {
    return self.modifiers.selectOne(m | m.isTypeOf(JSL!IconModifier));
}

@cached
operation JSL!Modifiable getOrientationModifier(): JSL!Modifier {
    return self.modifiers.selectOne(m | m.isTypeOf(JSL!OrientationModifier));
}

@cached
operation JSL!Modifiable getStretchModifier(): JSL!Modifier {
    return self.modifiers.selectOne(m | m.isTypeOf(JSL!StretchModifier));
}

@cached
operation JSL!Modifiable getWidth(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "width"));
}

@cached
operation JSL!Modifiable getPrecision(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "precision"));
}

@cached
operation JSL!Modifiable getScale(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "scale"));
}

@cached
operation JSL!Modifiable getRegex(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "regex"));
}

@cached
operation JSL!Modifiable getRequired(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "required"));
}

@cached
operation JSL!Modifiable getMaxSize(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "max-size"));
}

@cached
operation JSL!Modifiable getMaxFileSize(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "max-file-size"));
}

@cached
operation JSL!Modifiable getMinSize(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "min-size"));
}

@cached
operation JSL!Modifiable getMimeType(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "mime-type"));
}

@cached
operation JSL!Modifiable getDetail(): JSL!DetailModifier {
    return self.modifiers.selectOne(m | m.isTypeOf(JSL!DetailModifier));
}

@cached
operation JSL!Modifiable getOpposite(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "opposite" or m.type == "opposite-add"));
}

@cached
operation JSL!Modifiable getDefault(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "default"));
}

@cached
operation JSL!Modifiable getChoices(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "choices"));
}

@cached
operation JSL!Modifiable getBind(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "bind"));
}

@cached
operation JSL!Modifiable isEventInstead(): Boolean {
    return (not self.modifiers.exists(m | m.type == "on"));
}

@cached
operation JSL!Modifiable isEventBefore(): Boolean {
    return (self.modifiers.exists(m | m.type == "on" and m.before));
}

@cached
operation JSL!Modifiable isEventAfter(): Boolean {
    return (self.modifiers.exists(m | m.type == "on" and m.after));
}

@cached
operation JSL!Modifiable getFrame(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "frame"));
}

@cached
operation JSL!Modifiable getWidth(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "width"));
}

@cached
operation JSL!Modifiable getHAlign(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "h-align"));
}

@cached
operation JSL!Modifiable getVAlign(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "v-align"));
}

@cached
operation JSL!Modifiable getLines(): JSL!Modifier {
    return (self.modifiers.selectOne(m | m.type == "lines"));
}
