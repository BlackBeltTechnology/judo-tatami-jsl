@lazy
@greedy
rule RowColumnDeclarationPrimitiveColumn
    transform s: JSL!UIRowColumnDeclaration
    to t: UI!ui::Column {
        t.setId(rootMenu.name + "/(jsl/" + s.getId() + ")/RowColumnDeclarationPrimitiveColumn");
        t.name = s.name;
        t.format = "%s";
        t.label = s.getLabelWithNameFallback();
        if (s.getIconModifier().isDefined()) {
            t.icon = s.equivalent("RowColumnDeclarationColumnIcon");
        }
        t.width = s.getWidth().isDefined() ? s.getWidth().value : "120";
        t.attributeType = s.getTransferFieldDeclarationEquivalent();

        log.debug("RowColumnDeclarationPrimitiveColumn: " + t.name);
}

@lazy
@greedy
rule RowColumnDeclarationColumnIcon
    transform s: JSL!UIRowColumnDeclaration
    to t: UI!ui::Icon {
        t.setId(rootMenu.name + "/(jsl/" + s.getId() + ")/RowColumnDeclarationColumnIcon");
        t.iconName = s.getIconModifier().value.value;
        t.name = s.name + "FieldIcon";
        t.setId(actorDeclaration.name + "/(jsl/" + s.getId() + ")/ColumnIcon");

        log.debug("RowColumnDeclarationColumnIcon: " + t.name);
}

@lazy
@greedy
rule RowColumnDeclarationPrimitiveColumnFilter
    transform s: JSL!UIRowColumnDeclaration
    to t: UI!ui::Filter {
        t.setId(rootMenu.name + "/(jsl/" + s.getId() + ")/RowColumnDeclarationPrimitiveColumnFilter");
        t.name = s.name + "Filter";
        t.attributeType = s.getTransferFieldDeclarationEquivalent();
        t.label = s.getLabelWithNameFallback();
        log.debug("RowColumnDeclarationPrimitiveColumnFilter: " + t.name);
}
