
rule Actor
    transform s: JSL!ActorDeclaration
    to t: UI!ui::data::ClassType {
        guard: s = actorDeclaration
        t.setId(actorDeclaration.name + "/(jsl/" + s.getId() + ")/Actor");

        t.name = s.getFqName() + "::ClassType";
        t.simpleName = s.name;
        //t.setPackageNameTokens(s);
        t.isActor = true;

        log.debug("Create class type (Actor): " + t.name);
}

rule Authentication
    transform s: JSL!ActorDeclaration
    to t: UI!ui::Authentication {
        guard: s = actorDeclaration
            and s.getPrincipal().isDefined()
            and s.getRealm().isDefined()
            and s.getIdentity().isDefined()

        t.setId(actorDeclaration.name + "/(jsl/" + s.getId() + ")/Authentication");
        t.realm = s.getRealm().value.value;

        s.equivalent("Application").authentication = t;

        log.debug("Create Authentication: " + t.realm);
}
