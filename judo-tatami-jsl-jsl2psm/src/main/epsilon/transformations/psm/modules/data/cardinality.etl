@lazy
rule CreateCardinalityForRelationDeclaration
    transform s: JSL!EntityStoredRelationDeclaration
    to t: JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForRelationDeclaration");

      t.lower = s.isRequired and not s.isMany ? 1 : 0;
      t.upper = s.isMany ? -1 : 1;
}

@lazy
rule CreateCardinalityForFieldDeclaration
    transform s: JSL!EntityStoredFieldDeclaration
    to t: JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForFieldDeclaration");

      t.lower = s.isRequired and not s.isMany ? 1 : 0;
      t.upper = s.isMany ? -1 : 1;
}


@lazy
rule CreateCardinalityForOppositeAddedRelation
    transform s: JSL!EntityRelationOppositeInjected
    to t: JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForOppositeAddedRelation");

      t.lower = 0;
      t.upper = s.isMany ? -1 : 1;
}

@lazy
rule CreateCardinalityForDerivedDeclaration
    transform s : JSL!EntityCalculatedRelationDeclaration
    to t : JUDOPSM!Cardinality
    {
      guard: s.getReferenceType().isKindOf(JSL!EntityDeclaration)

      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForDerivedDeclaration");

      t.lower = 0;
      t.upper = s.isMany ? -1 : 1;
}

@lazy
rule CreateCardinalityForEntityQueryDeclaration
    transform s : JSL!EntityCalculatedRelationDeclaration
    to t : JUDOPSM!Cardinality
    {
      guard: s.isQuery() and s.getReferenceType().isKindOf(JSL!EntityDeclaration)

      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForEntityQueryDeclaration");

      t.lower = 0;
      t.upper = s.isMany ? -1 : 1;
}

@lazy
rule CreateCardinalityForStaticQueryDeclaration
    transform s : JSL!QueryDeclaration
    to t : JUDOPSM!Cardinality
    {
      guard: s.referenceType.isKindOf(JSL!EntityDeclaration)

      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForStaticQueryDeclaration");

      t.lower = 0;
      t.upper = s.isMany ? -1 : 1;
}


@lazy
rule CreateCardinalityForTransferRelationDeclaration
    transform s : JSL!TransferRelationDeclaration
    to t : JUDOPSM!Cardinality
    {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForTransferRelationDeclaration");

      t.lower = s.isRequired and not s.isMany ? 1 : 0;
      t.upper = s.isMany ? -1 : 1;
}

