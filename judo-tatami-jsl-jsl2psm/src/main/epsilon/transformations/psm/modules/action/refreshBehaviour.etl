import "../../../../operations/_importAll.eol";

/*
@greedy
rule CreateRefreshOperationForEntityType
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!BoundOperation {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForEntityType");
      t.instanceRepresentation = s.equivalent("CreateMappedTransferObjectType");
      t.name = s.name + s.getFqName().fqNameToCamelCase();
      s.map.entity.getPSMEquivalent().operations.add(t);
      log.debug("Created CreateRefreshOperationForEntityType: " + t.name);
}

@greedy
rule CreateRefreshBehaviourForTransferType
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!TransferOperationBehaviour {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshBehaviourForTransferType");
      t.behaviourType = JUDOPSM!TransferOperationBehaviourType#REFRESH_INSTANCE;
      t.owner = s.equivalent("CreateMappedTransferObjectType");
      log.debug("Created CreateRefreshBehaviourForTransferType: " + s.name);
}

@greedy
rule CreateRefreshOperationForTransferType
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!BoundTransferOperation {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForTransferType");
      t.name = s.name;
      t.binding = s.equivalent("CreateRefreshOperationForEntityType");
      t.behaviour = s.equivalent("CreateRefreshBehaviourForTransferType");
      s.equivalent("CreateMappedTransferObjectType").operations.add(t);
      log.debug("Created CreateRefreshOperationForTransferType: " + t.name);      
}


@greedy
rule CreateRefreshOperationForTransferTypeInputParameter
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!Parameter {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForTransferTypeInputParameter");
      t.cardinality = s.equivalent("CreateCardinalityForRefreshTransferTypeInput");
      t.name = "input";
	  t.type = s.getPSMEquivalent();
      s.equivalent("CreateRefreshOperationForTransferType").input = t;
      log.debug("Created CreateRefreshOperationForTransferTypeInputParameter: " + t.name);
}

@greedy
rule CreateRefreshOperationForTransferTypeOutputParameter
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!Parameter {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForTransferTypeOutputParameter");
      t.cardinality = s.equivalent("CreateCardinalityForRefreshTransferTypeOutput");
      t.name = "return";
	  t.type = s.getPSMEquivalent();
      s.equivalent("CreateRefreshOperationForTransferType").output = t;
      log.debug("Created CreateRefreshOperationForTransferTypeOutputParameter: " + t.name);
}

@greedy
rule CreateRefreshOperationForEntityTypeInputParameter
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!Parameter {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForEntityTypeInputParameter");
      t.cardinality = s.equivalent("CreateCardinalityForRefreshEntityTypeInput");
      t.name = "input";
	  t.type = s.getPSMEquivalent();
      s.equivalent("CreateRefreshOperationForEntityType").input = t;
      log.debug("Created CreateRefreshOperationForEntityTypeInputParameter: " + t.name);
}

@greedy
rule CreateRefreshOperationForEntityTypeOutputParameter
    transform s: JSL!TransferDeclaration
    to t: JUDOPSM!Parameter {
      guard: s.isRefreshSupported()

      t.setId("(jsl/" + s.getId() + ")/CreateRefreshOperationForEntityTypeOutputParameter");
      t.cardinality = s.equivalent("CreateCardinalityForRefreshEntityTypeOutput");
      t.name = "return";
	  t.type = s.getPSMEquivalent();
      s.equivalent("CreateRefreshOperationForEntityType").output = t;
      log.debug("Created CreateRefreshOperationForEntityTypeOutputParameter: " + t.name);
}


@lazy
@greedy
rule CreateCardinalityForRefreshTransferTypeInput
    transform s : JSL!TransferDeclaration
    to t : JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForRefreshTransferTypeInput");

      t.lower = 1;
      t.upper = 1;
}

@lazy
@greedy
rule CreateCardinalityForRefreshTransferTypeOutput
    transform s : JSL!TransferDeclaration
    to t : JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForRefreshTransferTypeOutput");

      t.lower = 1;
      t.upper = 1;
}

@lazy
@greedy
rule CreateCardinalityForRefreshEntityTypeInput
    transform s : JSL!TransferDeclaration
    to t : JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForRefreshEntityTypeInput");

      t.lower = 1;
      t.upper = 1;
}

@lazy
@greedy
rule CreateCardinalityForRefreshEntityTypeOutput
    transform s : JSL!TransferDeclaration
    to t : JUDOPSM!Cardinality {
      t.setId("(jsl/" + s.getId() + ")/CreateCardinalityForRefreshEntityTypeOutput");

      t.lower = 1;
      t.upper = 1;
}

*/

/*
@greedy
rule CreateRefreshOperationForTransferObjectType
    transform s : ESM!TransferObjectType
    to t : JUDOPSM!BoundOperation {
        guard: esmUtils.isRefreshSupported(s)

        t.setId("(esm/" + s.getId() + ")/RefreshOperationForTransferObjectType");

        t.name = "_refreshInstance" + "For" + esmUtils.getNamespaceElementFQName(s).replace("::", "_").firstToUpperCase();
        t.instanceRepresentation = s.getPSMTransferObjectTypeEquivalent();

        t.input = new JUDOPSM!Parameter;
        t.input.setId("(esm/" + s.getId() + ")/RefreshOperationForTransferObjectType/Input");
        t.input.name = "input";
        t.input.type = s.equivalent("CreateQueryCustomizerType");
        t.input.cardinality = new JUDOPSM!Cardinality;
        t.input.cardinality.setId("(esm/" + s.getId() + ")/RefreshOperationForTransferObjectType/Input/Cardinality");
        t.input.cardinality.lower = 0;
        t.input.cardinality.upper = 1;

        t.output = new JUDOPSM!Parameter;
        t.output.setId("(esm/" + s.getId() + ")/RefreshOperationForTransferObjectType/Output");
        t.output.name = "output";
        t.output.type = s.getPSMTransferObjectTypeEquivalent();
        t.output.cardinality = new JUDOPSM!Cardinality;
        t.output.cardinality.setId("(esm/" + s.getId() + ")/RefreshOperationForTransferObjectType/Output/Cardinality");
        t.output.cardinality.lower = 1;
        t.output.cardinality.upper = 1;

        s.mapping.target.equivalent("CreateEntityType").operations.add(t);
}

@greedy
rule CreateRefreshTransferOperationForTransferObjectType
    transform s : ESM!TransferObjectType
    to t : JUDOPSM!BoundTransferOperation {
        guard: esmUtils.isRefreshSupported(s)

        t.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType");

        t.name = "_refreshInstance" + esmUtils.getNamespaceElementFQName(s).replace("::", "_").firstToUpperCase();
        t.behaviour = new JUDOPSM!TransferOperationBehaviour;
        t.behaviour.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType/Behaviour");
        t.behaviour.behaviourType = JUDOPSM!TransferOperationBehaviourType#REFRESH;
        t.behaviour.owner = s.getPSMTransferObjectTypeEquivalent();

        t.input = new JUDOPSM!Parameter;
        t.input.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType/Input");
        t.input.name = "input";
        t.input.type = s.equivalent("CreateQueryCustomizerType");
        t.input.cardinality = new JUDOPSM!Cardinality;
        t.input.cardinality.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType/Input/Cardinality");
        t.input.cardinality.lower = 0;
        t.input.cardinality.upper = 1;

        t.output = new JUDOPSM!Parameter;
        t.output.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType/Output");
        t.output.name = "output";
        t.output.type = s.getPSMTransferObjectTypeEquivalent();
        t.output.cardinality = new JUDOPSM!Cardinality;
        t.output.cardinality.setId("(esm/" + s.getId() + ")/RefreshTransferOperationForTransferObjectType/Output/Cardinality");
        t.output.cardinality.lower = 1;
        t.output.cardinality.upper = 1;

        t.binding = s.equivalent("CreateRefreshOperationForTransferObjectType");

        s.getPSMTransferObjectTypeEquivalent().operations.add(t);
}
*/
