import "../../../../operations/_importAll.eol";
import "../namespace/namespace.etl";

////////////////////////////////////////////////////////////////////////////////////////////
// Entity Field 
////////////////////////////////////////////////////////////////////////////////////////////

@abstract
rule AbstractCreateTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityFieldDeclaration
    to t: JUDOPSM!TransferAttribute {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.required = s.isRequired;
        t.name = s.name;
        t.binding = s.equivalent("CreateAttributeFromField");
        t.dataType = s.referenceType.getPSMEquivalent();
}


// Create default transfer object attribute and add it to default transfer object
rule CreateTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityFieldDeclaration
    to t: JUDOPSM!TransferAttribute
    extends AbstractCreateTransferAttributeForDefaultTransferObjectType {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.setId("(jsl/" + s.getId() + ")/CreateTransferAttributeForDefaultTransferObjectType");
        s.eContainer.equivalent("CreateEntityDefaultTransferObjectType").attributes.add(t);
        log.debug("Created TransferAttribute (Field) for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

// Create default transfer object attribute clone. It creates the attribute on the resource root,
// the caller code have to add it to the corresponding transfer object
// This method can be used to make clone attributes to inherited transfer objects
@lazy
rule CloneTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityFieldDeclaration
    to t: JUDOPSM!TransferAttribute
    extends AbstractCreateTransferAttributeForDefaultTransferObjectType {    
        t.setId("(jsl/" + s.getId() + ")/CloneTransferAttributeForDefaultTransferObjectType");
        log.debug("Clone TransferAttribute (Field) for DefaultTransferObjectType: [" + t.name + "]");
}

////////////////////////////////////////////////////////////////////////////////////////////
// Entity Identifier (Primitive)
////////////////////////////////////////////////////////////////////////////////////////////

@abstract
rule AbstractCreateIdentifierTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityIdentifierDeclaration
    to t: JUDOPSM!TransferAttribute {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)

        t.required = s.isRequired;
        t.name = s.name;
        t.binding = s.equivalent("CreateAttributeFromIdentifier");
        t.dataType = s.referenceType.getPSMEquivalent();
}

rule CreateIdentifierTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityIdentifierDeclaration    
    to t: JUDOPSM!TransferAttribute
    extends AbstractCreateIdentifierTransferAttributeForDefaultTransferObjectType {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.setId("(jsl/" + s.getId() + ")/CreateIdentifierTransferAttributeForDefaultTransferObjectType");

        s.eContainer.equivalent("CreateEntityDefaultTransferObjectType").attributes.add(t);
        log.debug("Created TransferAttribute (Identifier) for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

@lazy
rule CloneIdentifierTransferAttributeForDefaultTransferObjectType
	transform s: JSL!EntityIdentifierDeclaration
	to t: JUDOPSM!TransferAttribute
    extends AbstractCreateIdentifierTransferAttributeForDefaultTransferObjectType {
        t.setId("(jsl/" + s.getId() + ")/CloneIdentifierTransferAttributeForDefaultTransferObjectType");    
        log.debug("Clone TransferAttribute (Identifier) for DefaultTransferObjectType: [" + t.name + "]");
}


////////////////////////////////////////////////////////////////////////////////////////////
// Entity Identifier (Primitive)
////////////////////////////////////////////////////////////////////////////////////////////

@abstract
rule AbstractCreateDerivedTransferAttributeForDefaultTransferObjectType
    transform s : JSL!EntityDerivedDeclaration
    to t : JUDOPSM!TransferAttribute {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.name = s.name;
        t.binding = s.equivalent("CreateDataProperty");
        t.dataType = s.referenceType.getPSMEquivalent();
}

rule CreateDerivedTransferAttributeForDefaultTransferObjectType
    transform s: JSL!EntityDerivedDeclaration    
    to t: JUDOPSM!TransferAttribute
    extends AbstractCreateDerivedTransferAttributeForDefaultTransferObjectType {
        guard: generateDefaultTransferObject and s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.setId("(jsl/" + s.getId() + ")/CreateDerivedTransferAttributeForDefaultTransferObjectType");

        s.eContainer.equivalent("CreateEntityDefaultTransferObjectType").attributes.add(t);
        log.debug("Created TransferAttribute (Derived) for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

@lazy
rule CloneDerivedTransferAttributeForDefaultTransferObjectType
	transform s: JSL!EntityDerivedDeclaration
	to t: JUDOPSM!TransferAttribute
    extends AbstractCreateDerivedTransferAttributeForDefaultTransferObjectType {
        t.setId("(jsl/" + s.getId() + ")/CloneIdentifierTransferAttributeForDefaultTransferObjectType");    
        log.debug("Clone TransferAttribute (Derived) for DefaultTransferObjectType: [" + t.name + "]");
}


