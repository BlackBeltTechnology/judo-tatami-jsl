import "../../../../operations/_importAll.eol";
import "../namespace/namespace.etl";


////////////////////////////////////////////////////////////////////////////////////////////
// Transfer object field
////////////////////////////////////////////////////////////////////////////////////////////
@abstract
rule AbstractCreateTransferAttributeForTransferFieldDeclaration
    transform s: JSL!TransferFieldDeclaration
    to t: JUDOPSM!TransferAttribute {
        guard: s.referenceType.isKindOf(JSL!PrimitiveDeclaration)
        t.required = s.isRequired;
        t.name = s.name;
        t.dataType = s.referenceType.getPSMEquivalent();
}

@greedy
rule CreateTransientTransferAttribute
    transform s : JSL!TransferFieldDeclaration
    to t : JUDOPSM!TransferAttribute
    extends AbstractCreateTransferAttributeForTransferFieldDeclaration {
      guard: not s.maps() and not s.reads()
      t.setId("(jsl/" + s.getId() + ")/CreateTransientTransferAttribute");

      var def = s.getDefault();
      if (def.isDefined()) {
         if (s.eContainer.map.isUndefined()) {
            t.defaultValue = def.equivalent("CreateDefaultStaticDataForUnmappedTransferObjectConstructor");
         } else {
            t.defaultValue = def.equivalent("CreateDefaultDataPropertyForMappedTransferObjectConstructor");
         }
      }

      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute (Field) for TransferFieldDeclaration: [" + t.name + "] into [" + t.eContainer.name + "]");
}

@greedy
rule CreateDerivedTransferAttribute
    transform s : JSL!TransferFieldDeclaration
    to t : JUDOPSM!TransferAttribute
    extends AbstractCreateTransferAttributeForTransferFieldDeclaration {
      guard: s.reads()
      t.setId("(jsl/" + s.getId() + ")/CreateDerivedTransferAttribute");

      if (s.eContainer.map.isDefined()) {
         t.binding = s.getterExpr.equivalent("CreateReadsDataPropertyForMappedTransferObjectTransferFieldDeclaration");
      } else {
         t.binding = s.getterExpr.equivalent("CreateReadsStaticDataForUnmappedTransferObjectTransferFieldDeclaration");
      }

      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute (Derived) for TransferFieldDeclaration: [" + t.name + "] into [" + t.eContainer.name + "]");
}


@greedy
rule CreateMappedTransferAttribute
    transform s : JSL!TransferFieldDeclaration
    to t : JUDOPSM!TransferAttribute
    extends AbstractCreateTransferAttributeForTransferFieldDeclaration {
      guard: s.maps()
      t.setId("(jsl/" + s.getId() + ")/CreateMappedTransferAttribute");
      
      if (s.getterExpr.features.first.member.isKindOf(JSL!EntityFieldDeclaration) and not s.getterExpr.features.first.member.isCalculated()) {
         t.binding = s.getterExpr.features.first.member.equivalent("CreateAttributeFromField");         
      }
      
      //var def = JSL!TransferDataAssignment.all().selectOne(d | d.leftValue.declaration == s);
      if (s.getDefault().isDefined()) {
         t.defaultValue = s.getDefault().equivalent("CreateDefaultDataPropertyForMappedTransferObjectConstructor");
      } else if (s.getterExpr.features.first.member.getDefault().isDefined()) {
         t.defaultValue = s.getterExpr.features.first.member.getDefault().equivalent("CreateDefaultValueForPrimitiveEntityMember");
      }      
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute (Field) for TransferFieldDeclaration: [" + t.name + "] into [" + t.eContainer.name + "]");
}

////////////////////////////////////////////////////////////////////////////////////////////
// Primitive and Identifier default value
////////////////////////////////////////////////////////////////////////////////////////////
@greedy
rule CreateMappedTransferAttributeEntityDefault
    transform s : JSL!TransferFieldDeclaration
    to t : JUDOPSM!TransferAttribute {
      guard: s.maps() and s.getterExpr.features.first.member.getDefault().isDefined() and s.getDefault().isUndefined()
      t.name = defaultDefaultNamePrefix + s.getterExpr.features.first.member.name + defaultDefaultNameMidfix + s.getterExpr.features.first.member.eContainer.name + defaultDefaultNamePostfix;
      t.setId("(jsl/" + s.getId() + ")/CreateMappedTransferAttributeEntityDefault");      
      t.binding = s.getterExpr.features.first.member.getDefault().equivalent("CreateDefaultValueForPrimitiveEntityMember");
      t.dataType = s.referenceType.getPSMEquivalent();
      t.required = false;
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute DefaultValue (Field) for EntityDefault: [" + t.name + "] into [" + t.eContainer.name + "]");
}


@greedy
rule CreateTransferEntityDefaultValueAttributeForMappedTransferObjectConstructor
    transform s: JSL!DefaultModifier
    to t: JUDOPSM!TransferAttribute {
        guard: s.eContainer.isKindOf(JSL!TransferFieldDeclaration) and s.eContainer.eContainer.map.isDefined()
        t.name = defaultDefaultNamePrefix + s.eContainer.name + defaultDefaultNameMidfix + s.eContainer.eContainer.name + defaultDefaultNamePostfix;
        t.binding = s.equivalent("CreateDefaultDataPropertyForMappedTransferObjectConstructor");	  
        t.dataType = s.eContainer.referenceType.getPSMEquivalent();
        t.setId("(jsl/" + s.eContainer.getId() + ")/CreateTransferEntityDefaultValueAttributeForMappedTransferObjectConstructor");
        s.eContainer.eContainer.getPSMEquivalent().attributes.add(t);
        log.debug("Created TransferAttribute DefaultValue (Field) for MappedTransferObjectConstructor: [" + t.name + "] into [" + t.eContainer.name + "]");
}

@greedy
rule CreateTransferEntityDefaultValueAttributeForUnmappedTransferObjectConstructor
    transform s: JSL!DefaultModifier
    to t: JUDOPSM!TransferAttribute {
        guard: s.eContainer.isKindOf(JSL!TransferFieldDeclaration) and s.eContainer.eContainer.map.isUndefined()
        t.name = defaultDefaultNamePrefix + s.eContainer.name + defaultDefaultNameMidfix + s.eContainer.eContainer.name + defaultDefaultNamePostfix;
        t.binding = s.equivalent("CreateDefaultStaticDataForUnmappedTransferObjectConstructor");	  
        t.dataType = s.eContainer.referenceType.getPSMEquivalent();
        t.setId("(jsl/" + s.eContainer.getId() + ")/CreateTransferEntityDefaultValueAttributeForUnmappedTransferObjectConstructor");
        
        s.eContainer.eContainer.getPSMEquivalent().attributes.add(t);

        log.debug("Created TransferAttribute DefaultValue (Field) for UnmappedTransferObjectConstructor: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateAnnotationForTransferEntityDefaultValueAttributeForMappedTransferObjectConstructor
    transform s : JSL!DefaultModifier
    to t : JUDOPSM!Annotation {
        guard: s.eContainer.isKindOf(JSL!TransferFieldDeclaration) and s.eContainer.eContainer.map.isDefined()

        t.name = "TransferObjectAttributeWithDefaultValue";
        t.setId("(jsl/" + s.eContainer.getId() + ")/CreateAnnotationForTransferEntityDefaultValueAttributeForMappedTransferObjectConstructor");
        s.equivalent("CreateTransferEntityDefaultValueAttributeForMappedTransferObjectConstructor").annotations.add(t);
        log.debug("Created annotation for TransferAttribute DefaultValue (Field) for MappedTransferObjectConstructor: [" + t.name + "]");
}

rule CreateAnnotationForTransferEntityDefaultValueAttributeForUnmappedTransferObjectConstructor
    transform s : JSL!DefaultModifier
    to t : JUDOPSM!Annotation {
        guard: s.eContainer.isKindOf(JSL!TransferFieldDeclaration) and s.eContainer.eContainer.map.isUndefined()

        t.name = "TransferObjectAttributeWithDefaultValue";
        t.setId("(jsl/" + s.eContainer.getId() + ")/CreateAnnotationForTransferEntityDefaultValueAttributeForUnmappedTransferObjectConstructor");
        s.equivalent("CreateTransferEntityDefaultValueAttributeForUnmappedTransferObjectConstructor").annotations.add(t);
        log.debug("Created annotation for TransferAttribute DefaultValue (Field) for UnmappedTransferObjectConstructor: [" + t.name + "]");
}
