import "modules/namespace/namespace.etl";

import "modules/structure/entityDeclarationDefaultTransferObjectType.etl";
import "modules/structure/entityDeclarationDefaultTransferAttribute.etl";
import "modules/structure/entityDeclarationDefaultTransferRelation.etl";

import "modules/structure/transferDeclarationTransferAttribute.etl";
import "modules/structure/transferDeclarationTransferObjectType.etl";
import "modules/structure/transferDeclarationTransferRelation.etl";


import "modules/data/cardinality.etl";
import "modules/data/containment.etl";
import "modules/data/association.etl";
import "modules/data/entityType.etl";
import "modules/data/query.etl";
import "modules/data/primitiveTypedElement.etl";

import "modules/derived/expressionType.etl";
import "modules/derived/dataProperty.etl";
import "modules/derived/navigationProperty.etl";
import "modules/derived/entityQuery.etl";

import "modules/type/type.etl";

pre {
    JUDOPSM.target.resource.contents.add(defaultModelName.equivalent("CreateRootModel"));
}

post {
    for (c in JUDOPSM!Cardinality.all()) {
        c.setId(c.eContainer.getId()+"/cardinality");
    }

    // Collect primitive types which are not directly referenced as field types
    for (c in JSL!NavigationBaseDeclarationReference.all().select(n | n.reference.isKindOf(JSL!PrimitiveDeclaration))) {
         var dummy = c.reference.getPSMEquivalent();
    }
    for (c in JSL!QueryParameterDeclaration.all()) {
         var dummy = c.referenceType.getPSMEquivalent();
    }
}
