@cached
operation JSL!PrimitiveDeclaration getPSMEquivalent(): JUDOPSM!Primitive {
    if (self.primitive.isDefined()) {
        var byName = self.eContainer.name.equivalent("CreateModelPackages").elements.selectOne(e | e.name == self.name);
        if (byName.isDefined()) {
            return byName;
        }

        switch (self.primitive) {
            case "numeric":
                return self.equivalent("CreateNumericType");
            case "date":
                return self.equivalent("CreateDateType");
            case "time":
                return self.equivalent("CreateTimeType");
            case "timestamp":
                return self.equivalent("CreateTimestampType");
            case "boolean":
                return self.equivalent("CreateBooleanType");
            case "string":
                return self.equivalent("CreateStringType");
            case "binary":
                return self.equivalent("CreateBinaryType");
            default:
                throw "Unsupported primitive type: " + self.primitive;
        }
    }
    if (self.instanceOf(JSL!EnumDeclaration)) {
        return self.equivalent("CreateEnumerationType");
    }
}



@cached
operation JSL!PrimitiveDeclaration getFqName(): String {
    return self.eContainer.getFqName() + "#" + self.name;
}
