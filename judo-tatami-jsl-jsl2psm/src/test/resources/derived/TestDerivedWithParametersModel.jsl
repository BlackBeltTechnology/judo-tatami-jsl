model TestDerivesWithParameters

type numeric Integer precision 9  scale 0
type string String max-length 128


entity SalesPerson {
    relation Lead[] leads opposite salesPerson

    derived Lead[] leadsBetween(Integer minLeadsBetween = 1, Integer maxLeadsBetween = 50) = self.leads!filter(lead | lead.value > minLeadsBetween and lead.value < maxLeadsBetween)
    // self.leads!filter(lead | lead.value > input.minLeadsBetween!isDefined() ? input.minLeadsBetween : 1 and lead.value < input.maxLeadsBetween!isDefined() ? input.maxLeadsBetween : 50)

    derived Lead[] leadsOverWithMin(Integer minLeadsOverMin = 5) = self.leadsBetween(minLeadsBetween = minLeadsOverMin, maxLeadsBetween = 100)
    // self.leads!filter(lead | lead.value > input.minLeadsOverMin!isDefined() ? input.minLeadsOverMin : 5 and lead.value < 100)
    
    derived Lead[] leadsOver10 = self.leadsOverWithMin(minLeadsOverMin = 10)
    // self.leads!filter(lead | lead.value > 10 and lead.value < 100)

    derived Lead[] leadsOver20 = self.leadsBetween(minLeadsBetween = 20)
    // self.leads!filter(lead | lead.value > 20 and lead.value < 50)
    

    derived Integer leadsBetweenCount(Integer minLeadsBetween = 1, Integer maxLeadsBetween = 50) = self.leads!filter(lead | lead.value > minLeadsBetween and lead.value < maxLeadsBetween)!count()
    // self.leads!filter(lead | lead.value > input.minLeadsBetween!isDefined() ? input.minLeadsBetween : 1 and lead.value < input.maxLeadsBetween!isDefined() ? input.maxLeadsBetween : 50)!count()
    
    derived Integer leadsOverWithMinCount(Integer minLeadsOverMin = 5) = self.leadsBetweenCount(minLeadsBetween = minLeadsOverMin, maxLeadsBetween = 100)
    // self.leads!filter(lead | lead.value > input.minLeadsOverMin!isDefined() ? input.minLeadsOverMin : 5 and lead.value < 100)!count()
    
    derived Integer leadsOver10Count = self.leadsOverWithMinCount(minLeadsOverMin = 10)
    // self.leads!filter(lead | lead.value > 10 and lead.value < 100)!count()

    derived Integer leadsOver20Count = self.leadsBetweenCount(minLeadsBetween = 20)
    // self.leads!filter(lead | lead.value > 20 and lead.value < 50)!count()
}

entity Lead {
    field Integer value = 100000
    relation required SalesPerson salesPerson opposite leads
}
