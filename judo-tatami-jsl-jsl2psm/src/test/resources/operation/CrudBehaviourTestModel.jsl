model CrudBehaviourTestModel;

type binary Binary max-file-size: 1MB  mime-type: ["image/*"];
type boolean Boolean;
type date Date;
type numeric Numeric scale: 0 precision: 9;
type string String min-size: 0 max-size: 255;
type time Time;
type timestamp Timestamp;


transfer MappedTransfer maps Entity as e {
	event instead delete deleteInstance;
	event instead update updateInstance;
	event instead create createInstance;	
	
	relation CreateTransfer[] createEntities <= e.createEntities 
			create:true 
			update:true 
			delete:true;
			
	field Binary binaryDerived <= e.binary input: false;
	field String stringDerived <= e.string input: false;
	field Boolean booleanDerived <= e.boolean input: false;
	field Date dateDerived <= e.date input: false;
	field Numeric numericDerived <= e.numeric input: false;
	field Time timeDerived <= e.time input: false;
	field Timestamp timestampDerived <= e.timestamp input: false;	

	field Binary binaryTransient;
	field String stringTransient;
	field Boolean booleanTransient;
	field Date dateTransient;
	field Numeric numericTransient;
	field Time timeTransient;
	field Timestamp timestampTransient;	

	field Binary binaryMapped <= e.binary input: true;
	field String stringMapped <= e.string input: true;
	field Boolean booleanMapped <= e.boolean input: true;
	field Date dateMapped <= e.date input: true;
	field Numeric numericMapped <= e.numeric input: true;
	field Time timeMapped <= e.time input: true;
	field Timestamp timestampMapped <= e.timestamp input: true;	

}

entity Entity {	
	relation CreateEntity[] createEntities;
	field Binary binary;
	field String string;
	field Boolean boolean;
	field Date date;
	field Numeric numeric;
	field Time time;
	field Timestamp timestamp;	
}



transfer CreateTransfer maps CreateEntity as e {
	event instead create createInstance;		
}

entity CreateEntity {
}

