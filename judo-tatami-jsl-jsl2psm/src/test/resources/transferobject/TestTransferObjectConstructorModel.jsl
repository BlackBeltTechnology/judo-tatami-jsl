model TransferObjectConstructorModel;

type string String min-size:0 max-size:250;
type numeric Integer precision:3 scale:0;


enum MyEnum {
    Atomic = 0;
    Bombastic = 1;
    Crazy = 2;
}

entity EntityAncestor {
	field Integer attributeAncestor = -1;
	identifier Integer identifierAncestor = -1;	
	field MyEnum enumAncestor = MyEnum#Atomic;
}

entity Entity extends EntityAncestor {
	field Integer attribute = 1;
	field EntityRelated containment;
	field EntityRelated[] containmentCollection;
	field MyEnum `enum` = MyEnum#Bombastic;
	
	relation EntityRelated association;
	relation EntityRelated[] associationCollection;

	identifier Integer identifier = 1;	
}

entity EntityRelated {
	field Integer attribute ;
	relation Entity `entity` opposite-add:entityRelatedOpposite;
	relation Entity entityCollection opposite-add:entityRelatedOppositeCollection[];
}

transfer Unmapped {
	field String transient;
	event create {
		self.transient = "Test";
	}
}

transfer Mapped maps Entity as e {
    field Integer unmappedAttribute;
	field Integer mappedAttribute <=> e.attribute;
	field Integer mappedIdentifier <=> e.identifier;
    field MyEnum mappedEnum <=> e.`enum`;
	field Integer mappedAttributeEntityDefault <=> e.attribute;
	field Integer mappedIdentifierEntityDefault <=> e.identifier;
    field MyEnum mappedEnumEntityDefault <=> e.`enum`;
	field Integer mappedAttributeAncestorEntityDefault <=> e.attributeAncestor;
	field Integer mappedIdentifierAncestorEntityDefault <=> e.identifierAncestor;
    field MyEnum mappedEnumAncestorEntityDefault <=> e.enumAncestor;

	relation MappedRelated mappedAssociation <=> e.association;
	relation MappedRelated[] mappedAssociationCollection <=> e.associationCollection;
    relation MappedRelated mappedAssociationOpposite <=> e.entityRelatedOpposite;
    relation MappedRelated[] mappedAssociationOppositeCollection <=> e.entityRelatedOppositeCollection;

    relation MappedRelated transientRelation;
    relation MappedRelated[] transientRelationCollection;

	
	event create {
		self.unmappedAttribute = 1;
		self.mappedAttribute = 2;
		self.mappedIdentifier = 3;
		self.mappedEnum = MyEnum#Crazy;

		self.mappedAssociation = EntityRelated!any();
		self.mappedAssociationCollection = EntityRelated!all();
		self.mappedAssociationOpposite = EntityRelated!any();
		self.mappedAssociationOppositeCollection = EntityRelated!all();
		self.transientRelation = EntityRelated!any();
		self.transientRelationCollection = EntityRelated!all();
	}
}

transfer MappedRelated maps EntityRelated as e {
	field Integer mappedAttribute <=> e.attribute;
}
